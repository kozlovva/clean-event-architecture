version: '3.9'

services:
  order-service:
    container_name: order-service
    image: kozlovva/order-service:latest
    depends_on:
      - kafka
      - mongodb
    ports:
      - 18080:18080
    environment:
      SERVER_PORT: 18080
      SPRING_DATA_MONGODB_HOST: mongodb
    networks:
      - backend
  consumer-service:
    container_name: consumer-service
    image: kozlovva/consumer-service:latest
    depends_on:
      - kafka
    environment:
      SERVER_PORT: 18081
    networks:
      - backend
  gateway:
    container_name: gateway-service
    image: kozlovva/gateway:latest
    ports:
      - 18082:18082
    depends_on:
      - kafka
    environment:
      SERVER_PORT: 18082
    networks:
      - backend
  kafka:
    container_name: kafka
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_LISTENERS: 'PLAINTEXT://0.0.0.0:9092'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
    networks:
      - backend
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: 'local'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka:9092'
      KAFKA_CLUSTERS_0_ZOOKEEPER: 'zookeeper:2181'
    networks:
      - backend
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - backend
  mongodb:
    image: mongo:4.0.24
    networks:
      - backend

networks:
  backend:
